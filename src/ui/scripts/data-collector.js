// ==================== Êï∞ÊçÆÊî∂ÈõÜÂô® ====================

class DataCollector {
  constructor() {
    this.moduleDataCollectors = {
      carousel: this.collectCarouselData.bind(this)
    };
    
    // Â≠òÂÇ®ÈîÆÊò†Â∞Ñ
    this.storageKeyMap = {
      'carousel-title-bg-upload': 'titleBgImage',
      'carousel-image-upload': 'carouselImage',
      'carousel-image-bg-upload': 'carouselBgImage'
    };
  }

  // Êî∂ÈõÜË°®ÂçïÊï∞ÊçÆ
  collectFormData() {
    const config = {
      // È°µÈù¢Âü∫Á°ÄËÆæÁΩÆ
      pageBgColor: document.getElementById('pageColor')?.value || '#FFFFFF',
      pageBgImage: window.imageManager.get('pageBackground'),
      headerImage: window.imageManager.get('headerImage'),
      titleUpload: window.imageManager.get('titleUpload'),
      gameIcon: window.imageManager.get('gameIcon'),
      
      // Ê∏∏Êàè‰ø°ÊÅØ
      buttonVersion: document.getElementById('buttonVersionSelect')?.value || 'imageButton',
      
      // Ê∏∏Êàè‰ø°ÊÅØ - Â∏¶iconÁâà
      gameName: document.getElementById('gameNameInput')?.value || '',
      gameDesc: document.getElementById('gameCopyInput')?.value || '',
      gameTextColor: document.getElementById('gameCopyTextColor')?.value || '#FFFFFF',
      iconButtonText: document.getElementById('iconButtonText')?.value || 'Á´ãÂç≥‰∏ãËΩΩ',
      iconButtonTextColor: document.getElementById('iconButtonTextColor')?.value || '#FFFFFF',
      iconButtonBg: window.imageManager.get('iconButtonBg'),
      
      // Ê∏∏Êàè‰ø°ÊÅØ - ÂçïÊåâÈíÆÁâà
      singleButtonText: document.getElementById('singleButtonText')?.value || 'Á´ãÂç≥‰∏ãËΩΩ',
      singleButtonTextColor: document.getElementById('singleButtonTextColor')?.value || '#FFFFFF',
      singleButtonBg: window.imageManager.get('singleButtonBg'),
      
      // Ê∏∏Êàè‰ø°ÊÅØ - ÂèåÊåâÈíÆÁâà
      leftButtonText: document.getElementById('leftButtonText')?.value || 'Â∑¶‰æßÊåâÈíÆ',
      leftButtonBg: window.imageManager.get('leftButtonBg'),
      leftButtonTextColor: document.getElementById('leftButtonTextColor')?.value || '#FFFFFF',
      rightButtonText: document.getElementById('rightButtonText')?.value || 'Âè≥‰æßÊåâÈíÆ',
      rightButtonBg: window.imageManager.get('rightButtonBg'),
      rightButtonTextColor: document.getElementById('rightButtonTextColor')?.value || '#FFFFFF',
      btnSpacing: parseInt(document.getElementById('btnSpacing')?.value) || 10,
      
      // Ê¥ªÂä®ËßÑÂàô
      rulesTitle: document.getElementById('rulesTitle')?.value || '',
      rulesBgImage: window.imageManager.get('rulesBg'),
      rulesContent: document.getElementById('rulesContent')?.value || '',
      footerLogo: window.imageManager.get('footerLogo'),
      footerBg: window.imageManager.get('footerBg'),
      
      // Ê®°ÂùóÊï∞ÊçÆ
      modules: this.collectModuleData()
    };
    
    console.log('Êî∂ÈõÜÂà∞ÁöÑË°®ÂçïÊï∞ÊçÆ:', config);
    return config;
  }
  
  // Êî∂ÈõÜÊ®°ÂùóÊï∞ÊçÆ
  collectModuleData() {
    const modules = document.querySelectorAll('#modulesContainer .module');
    const moduleData = [];
    
    modules.forEach(moduleEl => {
      const moduleType = moduleEl.dataset.moduleType;
      const moduleId = moduleEl.id;
      
      if (moduleType && moduleId) {
        const moduleContent = this.collectModuleContent(moduleEl, moduleType, moduleId);
        if (moduleContent) {
          // Ëé∑ÂèñÊ®°ÂùóÊ†áÈ¢ò
          const moduleTitle = this.getModuleTitle(moduleType);
          
          moduleData.push({
            id: moduleId,
            type: moduleType,  // ‰øùÊåÅÂ≠óÁ¨¶‰∏≤Ê†ºÂºèÔºåÂú®ÂêéÁ´ØÂ§ÑÁêÜÁ±ªÂûãËΩ¨Êç¢
            title: moduleTitle, // Ê∑ªÂä†Ê†áÈ¢òÂ≠óÊÆµ
            content: moduleContent
          });
          
          console.log('üìä [Ê®°ÂùóÊï∞ÊçÆÊî∂ÈõÜ]', {
            moduleId,
            moduleType,
            moduleTitle,
            Êî∂ÈõÜÂÜÖÂÆπ: moduleContent
          });
        }
      }
    });
    
    console.log('üéØ [ÊâÄÊúâÊ®°ÂùóÊï∞ÊçÆÊî∂ÈõÜÂÆåÊàê]', moduleData);
    return moduleData;
  }
  
  // Ëé∑ÂèñÊ®°ÂùóÊ†áÈ¢ò
  getModuleTitle(moduleType) {
    const titleMap = {
      'nineGrid': '‰πùÂÆ´Ê†ºÊäΩÂ•ñ',
      'signIn': 'ÊØèÊó•Á≠æÂà∞',
      'collectCards': 'ÈõÜÂç°Ê¥ªÂä®',
      'activityContent': 'Ê¥ªÂä®ËØ¶ÊÉÖ',
      'carousel': 'ÂõæÁâáËΩÆÊí≠ÔºàÊ®™ÁâàÔºâ'
    };
    return titleMap[moduleType] || 'Êú™Áü•Ê®°Âùó';
  }
  
  // Êî∂ÈõÜÊ®°ÂùóÂÜÖÂÆπ
  collectModuleContent(container, moduleType, moduleId) {
    switch (moduleType) {
      case 'nineGrid':
        return this.collectLotteryData(container, moduleId);
      case 'lotteryModule':
        return this.collectLotteryData(container, moduleId);
      case 'signInModule':
        return this.collectSignInData(container, moduleId);
      case 'collectModule':
        return this.collectCardsData(container, moduleId);
      case 'activityContent':
        return this.collectActivityContentData(container, moduleId);
      case 'carousel':
        return this.collectCarouselData(moduleId);
      default:
        console.warn(`Êú™Áü•ÁöÑÊ®°ÂùóÁ±ªÂûã: ${moduleType}`);
        return null;
    }
  }
  
  // Êî∂ÈõÜ‰πùÂÆ´Ê†ºÊäΩÂ•ñÊï∞ÊçÆ
  collectLotteryData(container, moduleId) {
    const data = {
      mainTitle: container.querySelector('.big-title-input')?.value || "ÊäΩÂ•ñÊ¥ªÂä®",
      titleBgImage: window.imageManager.getModule(`${moduleId}-titlebg`),
      gridBgImage: window.imageManager.getModule(`${moduleId}-gridbg`),
      drawButtonImage: window.imageManager.getModule(`${moduleId}-drawbtn`),
      prizeBgImage: window.imageManager.getModule(`${moduleId}-prizebg`),
      prizes: this.collectNineGridPrizes(container, moduleId)
    };
    
    return data;
  }
  
  // Êî∂ÈõÜÁ≠æÂà∞Êï∞ÊçÆ
  collectSignInData(container, moduleId) {
    const data = {
      titleImage: window.imageManager.getModule(`${moduleId}-title`),
      bgImage: window.imageManager.getModule(`${moduleId}-bg`),
      daysCount: parseInt(container.querySelector('.days-count')?.value) || 7,
      dayIcon: window.imageManager.getModule(`${moduleId}-dayicon`),
      signButton: window.imageManager.getModule(`${moduleId}-signbtn`)
    };
    
    return data;
  }
  
  // Êî∂ÈõÜÈõÜÂç°Êï∞ÊçÆ
  collectCardsData(container, moduleId) {
    const data = {
      titleImage: window.imageManager.getModule(`${moduleId}-title`),
      bgImage: window.imageManager.getModule(`${moduleId}-bg`),
      cardsCount: parseInt(container.querySelector('.cards-count')?.value) || 5,
      cardStyle: container.querySelector('input[name="cardStyle"]:checked')?.value || 'style1',
      cardBg: window.imageManager.getModule(`${moduleId}-cardbg`),
      combineButton: window.imageManager.getModule(`${moduleId}-combinebtn`)
    };
    
    return data;
  }
  
  // Êî∂ÈõÜÊ¥ªÂä®ÂÜÖÂÆπÊï∞ÊçÆ
  collectActivityContentData(container, moduleId) {
    const data = {
      mainTitle: container.querySelector('.activity-content-main-title-input')?.value || '',
      mainTitleBg: window.imageManager.getModule(`${moduleId}-main-title-bg`),
      subTitle: container.querySelector('.activity-content-sub-title-input')?.value || '',
      subTitleBg: window.imageManager.getModule(`${moduleId}-sub-title-bg`),
      text: container.querySelector('.activity-content-text-input')?.value || '',
      image: window.imageManager.getModule(`${moduleId}-image`)
    };
    
    console.log('üîç [Ê¥ªÂä®ÂÜÖÂÆπÊï∞ÊçÆÊî∂ÈõÜ]', {
      moduleId,
      data,
      ‰∏ªÊ†áÈ¢ò: data.mainTitle,
      ÂâØÊ†áÈ¢ò: data.subTitle,
      Ê≠£Êñá: data.text,
      ÂõæÁâá: !!data.image
    });
    
    return data;
  }
  
  // Êî∂ÈõÜÂõæÁâáËΩÆÊí≠Êï∞ÊçÆ
  collectCarouselData(moduleId) {
    try {
      const titleInput = document.querySelector(`#${moduleId} input[name="carousel-title"]`);
      const titleBgUpload = document.querySelector(`#${moduleId} .carousel-title-bg-upload`);
      const carouselUpload = document.querySelector(`#${moduleId} .carousel-image-upload`);
      const carouselBgUpload = document.querySelector(`#${moduleId} .carousel-image-bg-upload`);

    const data = {
        title: titleInput?.value || '',
        titleBgImage: titleBgUpload?.dataset.imageData,
        carouselImage: carouselUpload?.dataset.imageData,
        carouselBgImage: carouselBgUpload?.dataset.imageData
    };
    
    console.log('üîç [ÂõæÁâáËΩÆÊí≠Êï∞ÊçÆÊî∂ÈõÜ]', {
      moduleId,
      data,
      Ê†áÈ¢ò: data.title,
      ËΩÆÊí≠ÂõæÁâá: !!data.carouselImage,
      Ê†áÈ¢òËÉåÊôØ: !!data.titleBgImage,
      ËΩÆÊí≠ËÉåÊôØ: !!data.carouselBgImage
    });
    
    return data;
    } catch (error) {
      console.error('Êî∂ÈõÜËΩÆÊí≠ÂõæÊï∞ÊçÆÂ§±Ë¥•:', error);
      return null;
    }
  }
  
  // Ëé∑ÂèñÂ≠òÂÇ®ÈîÆ
  getStorageKey(className, moduleId) {
    const baseKey = this.storageKeyMap[className];
    if (!baseKey) {
      return null;
    }
    return `${moduleId}-${baseKey}`;
  }
  
  // Ëé∑ÂèñÂ•ñÂìÅ‰ΩçÁΩÆ
  getPrizePosition(index) {
    // ‰πùÂÆ´Ê†º‰ΩçÁΩÆÊò†Â∞Ñ (3x3ÁΩëÊ†º)
    const positions = [
      { row: 0, col: 0 }, // ‰ΩçÁΩÆ0: Â∑¶‰∏ä
      { row: 0, col: 1 }, // ‰ΩçÁΩÆ1: ‰∏ä‰∏≠
      { row: 0, col: 2 }, // ‰ΩçÁΩÆ2: Âè≥‰∏ä
      { row: 1, col: 2 }, // ‰ΩçÁΩÆ3: Âè≥‰∏≠
      { row: 2, col: 2 }, // ‰ΩçÁΩÆ4: Âè≥‰∏ã
      { row: 2, col: 1 }, // ‰ΩçÁΩÆ5: ‰∏ã‰∏≠
      { row: 2, col: 0 }, // ‰ΩçÁΩÆ6: Â∑¶‰∏ã
      { row: 1, col: 0 }, // ‰ΩçÁΩÆ7: Â∑¶‰∏≠
      { row: 1, col: 1 }  // ‰ΩçÁΩÆ8: ‰∏≠ÂøÉ(ÊäΩÂ•ñÊåâÈíÆ‰ΩçÁΩÆ)
    ];
    
    return positions[index] || { row: 0, col: 0 };
  }
  
  // Êî∂ÈõÜ‰πùÂÆ´Ê†ºÂ•ñÂìÅÊï∞ÊçÆÔºà‰∏ìÈó®Â§ÑÁêÜ3-2-3Â∏ÉÂ±ÄÔºâ
  collectNineGridPrizes(container, moduleId) {
    const prizes = [];
    const prizeElements = container.querySelectorAll('.prize-grid-custom .grid-item, .prize-upload');
    
    prizeElements.forEach((prizeEl, index) => {
      const prizeLabel = prizeEl.querySelector('.prize-label')?.textContent || `Â•ñÂìÅ${String(index + 1).padStart(2, '0')}`;
      prizes.push({
        image: window.imageManager.getModule(`${moduleId}-prize-${index}`),
        name: prizeLabel,
        position: this.getNineGridPosition(index) // Ê∑ªÂä†‰ΩçÁΩÆ‰ø°ÊÅØ
      });
    });
    
    return prizes;
  }

  // Ëé∑Âèñ‰πùÂÆ´Ê†º‰ΩçÁΩÆÔºà3-2-3Â∏ÉÂ±ÄËΩ¨Êç¢‰∏∫Ê†áÂáÜ3x3‰ΩçÁΩÆÔºâ
  getNineGridPosition(index) {
    // 3-2-3Â∏ÉÂ±ÄÂØπÂ∫îÁöÑ‰πùÂÆ´Ê†º‰ΩçÁΩÆÊò†Â∞Ñ
    const positionMap = {
      0: 0, // Á¨¨‰∏ÄË°åÁ¨¨‰∏Ä‰∏™ -> ‰ΩçÁΩÆ0
      1: 1, // Á¨¨‰∏ÄË°åÁ¨¨‰∫å‰∏™ -> ‰ΩçÁΩÆ1  
      2: 2, // Á¨¨‰∏ÄË°åÁ¨¨‰∏â‰∏™ -> ‰ΩçÁΩÆ2
      3: 3, // Á¨¨‰∫åË°åÁ¨¨‰∏Ä‰∏™ -> ‰ΩçÁΩÆ3
      4: 5, // Á¨¨‰∫åË°åÁ¨¨‰∫å‰∏™ -> ‰ΩçÁΩÆ5ÔºàË∑≥Ëøá‰∏≠Èó¥ÁöÑÊäΩÂ•ñÊåâÈíÆ‰ΩçÁΩÆ4Ôºâ
      5: 6, // Á¨¨‰∏âË°åÁ¨¨‰∏Ä‰∏™ -> ‰ΩçÁΩÆ6
      6: 7, // Á¨¨‰∏âË°åÁ¨¨‰∫å‰∏™ -> ‰ΩçÁΩÆ7
      7: 8  // Á¨¨‰∏âË°åÁ¨¨‰∏â‰∏™ -> ‰ΩçÁΩÆ8
    };
    
    return positionMap[index] || index;
  }
  
  // Êî∂ÈõÜÂ•ñÂìÅÊï∞ÊçÆÔºàÂ§áÁî®ÊñπÊ≥ïÔºâ
  collectPrizeData(container, moduleId) {
    const prizes = [];
    const prizeElements = container.querySelectorAll('.grid-item');
    
    prizeElements.forEach((prizeEl, index) => {
      const prize = {
        position: this.getPrizePosition(index),
        image: window.imageManager.getModule(`${moduleId}-prize-${index}`),
      };
      prizes.push(prize);
    });
    
    return prizes;
  }
  
  // È™åËØÅÊî∂ÈõÜÁöÑÊï∞ÊçÆ
  validateData(config) {
    const errors = [];
    
    // Âü∫Á°ÄÈ™åËØÅ
    if (!config.pageBgColor) {
      errors.push('È°µÈù¢È¢úËâ≤‰∏çËÉΩ‰∏∫Á©∫');
    }
    
    // ÊåâÈíÆÁâàÊú¨È™åËØÅ
    if (!config.buttonVersion) {
      errors.push('ÂøÖÈ°ªÈÄâÊã©ÊåâÈíÆÁâàÊú¨');
    }
    
    return errors;
  }
}

// ÂàõÂª∫ÂÖ®Â±ÄÊï∞ÊçÆÊî∂ÈõÜÂô®ÂÆû‰æãÂπ∂ÊåÇËΩΩÂà∞windowÂØπË±°
window.dataCollector = new DataCollector(); 